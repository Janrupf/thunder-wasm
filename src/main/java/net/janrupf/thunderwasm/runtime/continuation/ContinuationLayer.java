package net.janrupf.thunderwasm.runtime.continuation;

import net.janrupf.thunderwasm.runtime.state.MultiValue;

public final class ContinuationLayer {
    private final int pointId;
    private final MultiValue locals;
    private final MultiValue heapLocals;
    private final MultiValue stack;

    private ContinuationLayer(int pointId, MultiValue locals, MultiValue heapLocals, MultiValue stack) {
        this.pointId = pointId;
        this.locals = locals;
        this.heapLocals = heapLocals;
        this.stack = stack;
    }

    public int getPointId() {
        return pointId;
    }

    public MultiValue getLocals() {
        return locals;
    }

    public MultiValue getHeapLocals() {
        return heapLocals;
    }

    public MultiValue getStack() {
        return stack;
    }

    /**
     * Create a new continuation layer.
     * <p>
     * The arguments of this function are purposefully in a weird order
     * to make the generated bytecode simpler.
     *
     * @param stack      the stack values
     * @param id         the id of the continuation point
     * @param heapLocals the heap locals
     * @param locals     the locals
     * @return the created layer
     */
    public static ContinuationLayer create(
            MultiValue stack,
            int id,
            MultiValue heapLocals,
            MultiValue locals
    ) {
        return new ContinuationLayer(id, locals, heapLocals, stack);
    }
}
